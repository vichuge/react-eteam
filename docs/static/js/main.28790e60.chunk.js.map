{"version":3,"sources":["components/Home.js","components/App.js","redux/actionTypes.js","redux/reducers/list.js","redux/reducers/index.js","index.js"],"names":["Home","list","useSelector","state","console","log","elements","map","pokemon","index","name","addres","city","region","country","birthday","App","basename","process","path","component","exact","ALL_ELEMENTS","initialState","action","type","payload","rootReducer","combineReducers","listReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+ncAsCeA,EAjCF,WACX,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAE1C,OADAG,QAAQC,IAAIJ,GAEV,mCACE,kCACE,gCACE,+BACE,sCACA,yCACA,sCACA,wCACA,yCACA,+CAGJ,gCACGA,EAAKK,SAASC,KAAI,SAACC,EAASC,GAAV,OACjB,+BACE,6BAAKD,EAAQE,OACb,6BAAKF,EAAQG,SACb,6BAAKH,EAAQI,OACb,6BAAKJ,EAAQK,SACb,6BAAKL,EAAQM,UACb,6BAAKN,EAAQO,aANNN,cCXNO,EARH,kBACV,cAAC,IAAD,CAAeC,SAAUC,eAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWpB,EAAMqB,OAAK,SCP/BC,EAAe,eCGtBC,EAAe,CACnBjB,S,OAcaL,EAXF,WAAmC,IAAlCE,EAAiC,uDAAzBoB,EAAcC,EAAW,uCAC7C,OAAQA,EAAOC,OACRH,EACI,CACLhB,SAAUkB,EAAOE,SAGZvB,GCNEwB,EAJKC,YAAgB,CAClC3B,KAAM4B,ICIFC,G,MAAkBC,OAAOC,sCAAwCC,KAEjEC,EAAQC,YACZR,EACAG,EAAgBM,YAAgBC,OAG5BC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,K","file":"static/js/main.28790e60.chunk.js","sourcesContent":["import React/* , { useState, useEffect } */ from 'react';\nimport { useSelector/* , useDispatch */ } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\n// import { getList } from '../redux/actions';\n\nconst Home = () => {\n  const list = useSelector((state) => state.list);\n  console.log(list);\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>name</th>\n            <th>address</th>\n            <th>city</th>\n            <th>region</th>\n            <th>country</th>\n            <th>birthday</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.elements.map((pokemon, index) => (\n            <tr key={index}>\n              <td>{pokemon.name}</td>\n              <td>{pokemon.addres}</td>\n              <td>{pokemon.city}</td>\n              <td>{pokemon.region}</td>\n              <td>{pokemon.country}</td>\n              <td>{pokemon.birthday}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;","export const ALL_ELEMENTS = 'ALL_ELEMENTS';","import { ALL_ELEMENTS } from '../actionTypes';\nimport data from '../../list/data.json';\n\nconst initialState = {\n  elements: data,\n};\n\nconst list = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_ELEMENTS:\n      return {\n        elements: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default list;","import { combineReducers } from 'redux';\n\nimport listReducer from './list';\n\nconst rootReducer = combineReducers({\n  list: listReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport rootReducer from './redux/reducers';\nimport './index.css';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);"],"sourceRoot":""}