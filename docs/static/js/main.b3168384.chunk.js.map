{"version":3,"sources":["redux/actionTypes.js","components/Home.js","redux/actions/index.js","components/App.js","redux/reducers/list.js","redux/reducers/index.js","index.js"],"names":["ALL_ELEMENTS","Home","useState","elements","list","setList","dispatch","useDispatch","reduxList","useSelector","state","console","log","useEffect","status","a","axios","get","then","response","all","data","type","payload","catch","e","map","person","index","name","addres","city","region","country","birthday","App","basename","process","path","component","exact","initialState","action","rootReducer","combineReducers","listReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kQAAaA,EAAe,e,OC2CbC,EAvCF,WACX,MAAwBC,mBAAS,CAAEC,SAAU,KAA7C,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMN,QAM/C,OALAO,QAAQC,IAAIR,GACZS,qBAAU,WACHT,EAAKU,QAAQR,ECJC,uCAAM,WAAOA,GAAP,SAAAS,EAAA,sDAC3BC,IAAMC,IAFM,mDAGTC,MAAK,SAACC,GALQ,IAACC,EAMdd,GANcc,EAMDD,EAASE,KANC,CAAEC,KAAMtB,EAAcuB,QAASH,QAQvDI,OAAM,SAACC,GACNd,QAAQC,IAAIa,MANW,2CAAN,uDDKnBpB,EAAQG,KACP,CAACJ,EAAKU,OAAQR,EAAUE,IAEzB,mCACE,kCACE,gCACE,+BACE,sCACA,yCACA,sCACA,wCACA,yCACA,+CAGJ,gCACGJ,EAAKD,SAASuB,KAAI,SAACC,EAAQC,GAAT,OACjB,+BACE,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,SACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,SACZ,6BAAKL,EAAOM,UACZ,6BAAKN,EAAOO,aANLN,cEhBNO,EARH,kBACV,cAAC,IAAD,CAAeC,SAAUC,eAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtC,EAAMuC,OAAK,SCLtCC,EAAe,CACnBtC,SAAU,GACVW,QAAQ,GAeKV,EAZF,WAAmC,IAAlCM,EAAiC,uDAAzB+B,EAAcC,EAAW,uCAC7C,OAAQA,EAAOpB,OACRtB,EACI,CACLG,SAAUuC,EAAOnB,QACjBT,QAAQ,GAGHJ,GCPEiC,EAJKC,YAAgB,CAClCxC,KAAMyC,ICIFC,G,MAAkBC,OAAOC,sCAAwCC,KAEjEC,EAAQC,YACZR,EACAG,EAAgBM,YAAgBC,OAG5BC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,K","file":"static/js/main.b3168384.chunk.js","sourcesContent":["export const ALL_ELEMENTS = 'ALL_ELEMENTS';","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getList } from '../redux/actions';\n\nconst Home = () => {\n  const [list, setList] = useState({ elements: [] });\n  const dispatch = useDispatch();\n  const reduxList = useSelector((state) => state.list);\n  console.log(list);\n  useEffect(() => {\n    if (!list.status) dispatch(getList());\n    setList(reduxList);\n  }, [list.status, dispatch, reduxList]);\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>name</th>\n            <th>address</th>\n            <th>city</th>\n            <th>region</th>\n            <th>country</th>\n            <th>birthday</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.elements.map((person, index) => (\n            <tr key={index}>\n              <td>{person.name}</td>\n              <td>{person.addres}</td>\n              <td>{person.city}</td>\n              <td>{person.region}</td>\n              <td>{person.country}</td>\n              <td>{person.birthday}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\nimport { ALL_ELEMENTS } from '../actionTypes';\n\nexport const all = (all) => ({ type: ALL_ELEMENTS, payload: all });\n\nconst myUrl = 'https://vichuge.github.io/react-eteam/data.json'\nexport const getList = () => async (dispatch) => {\n  axios.get(myUrl)\n    .then((response) => {\n      dispatch(all(response.data));\n    })\n    .catch((e) => {\n      console.log(e)\n    });\n};","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;","import { ALL_ELEMENTS } from '../actionTypes';\n\nconst initialState = {\n  elements: [],\n  status: false,\n};\n\nconst list = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_ELEMENTS:\n      return {\n        elements: action.payload,\n        status: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default list;","import { combineReducers } from 'redux';\n\nimport listReducer from './list';\n\nconst rootReducer = combineReducers({\n  list: listReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport rootReducer from './redux/reducers';\nimport './index.css';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);"],"sourceRoot":""}